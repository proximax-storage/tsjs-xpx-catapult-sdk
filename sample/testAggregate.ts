import { TransactionMapping, AggregateTransaction, PublicAccount, NetworkType, Account,
    TransferTransaction, Deadline, Address, PlainMessage, TransactionBuilderFactory } from "../dist";
import { ChronoUnit } from "@js-joda/core";

// const acc = Account.createFromPrivateKeyV2("A22A4BBF126A2D7D7ECE823174DFD184C5DE0FDE4CB2075D30CFA409F7EF8908", NetworkType.TEST_NET);
// const acc1 = Account.createFromPrivateKeyV1("A22A4BBF126A2D7D7ECE823174DFD184C5DE0FDE4CB2075D30CFA409F7EF8908", NetworkType.TEST_NET);

const acc = Account.createFromPrivateKey("A22A4BBF126A2D7D7ECE823174DFD184C5DE0FDE4CB2075D30CFA409F7EF8908", NetworkType.TEST_NET, 2);
const acc1 = Account.createFromPrivateKey("A22A4BBF126A2D7D7ECE823174DFD184C5DE0FDE4CB2075D30CFA409F7EF8908", NetworkType.TEST_NET, 1);

// console.log(acc1.publicAccount);

// console.log(PublicAccount.getDerivationSchemeFromAccVersion(acc1.publicAccount.version!));

// console.log(acc.publicAccount);

// console.log(PublicAccount.getDerivationSchemeFromAccVersion(acc.publicAccount.version!));

const builder = new TransactionBuilderFactory();

const transferBuilder = builder.transfer()
        .deadline(Deadline.create(1, ChronoUnit.HOURS))
        .message(PlainMessage.create('test-message'))
        .mosaics([])
        .recipient(Address.createFromRawAddress('SBILTA367K2LX2FEXG5TFWAS7GEFYAGY7QLFBYKC'))
        .networkType(NetworkType.MIJIN_TEST);

const txn1 = transferBuilder
            .build();

const txn2 = transferBuilder
            .build();

const transferTransaction = TransferTransaction.create(
    Deadline.create(1, ChronoUnit.HOURS),
    Address.createFromRawAddress('SBILTA367K2LX2FEXG5TFWAS7GEFYAGY7QLFBYKC'),
    [],
    PlainMessage.create('test-message'),
    NetworkType.MIJIN_TEST,
);

const transferTransaction2 = TransferTransaction.create(
    Deadline.create(1, ChronoUnit.HOURS),
    Address.createFromRawAddress('SBILTA367K2LX2FEXG5TFWAS7GEFYAGY7QLFBYKC'),
    [],
    PlainMessage.create('test-message'),
    NetworkType.MIJIN_TEST,
);

const aggregateTransaction = AggregateTransaction.createBonded(
    Deadline.create(),
    [
        transferTransaction.toAggregate(acc1.publicAccount),
        transferTransaction2.toAggregate(acc.publicAccount)
    ],
    NetworkType.MIJIN_TEST,
    []
);

console.log(aggregateTransaction.innerTransactions[0].version);
console.log(aggregateTransaction.innerTransactions[1].version);

// const aggregateTransactionDTO = {
//     meta: {
//         hash: '671653C94E2254F2A23EFEDB15D67C38332AED1FBD24B063C0A8E675582B6A96',
//         height: [
//             18160,
//             0,
//         ],
//         id: '5A0069D83F17CF0001777E55',
//         index: 0,
//         merkleComponentHash: '81E5E7AE49998802DABC816EC10158D3A7879702FF29084C2C992CD1289877A7',
//     },
//     transaction: {
//         cosignatures: [
//             {
//                 signature: '5780C8DF9D46BA2BCF029DCC5D3BF55FE1CB5BE7ABCF30387C4637DD' +
//                 'EDFC2152703CA0AD95F21BB9B942F3CC52FCFC2064C7B84CF60D1A9E69195F1943156C07',
//                 signer: 'A5F82EC8EBB341427B6785C8111906CD0DF18838FB11B51CE0E18B5E79DFF630',
//             },
//         ],
//         deadline: [
//             3266625578,
//             11,
//         ],
//         maxFee: [
//             0,
//             0,
//         ],
//         signature: '939673209A13FF82397578D22CC96EB8516A6760C894D9B7535E3A1E0680' +
//         '07B9255CFA9A914C97142A7AE18533E381C846B69D2AE0D60D1DC8A55AD120E2B606',
//         signer: '7681ED5023141D9CDCF184E5A7B60B7D466739918ED5DA30F7E71EA7B86EFF2D',
//         transactions: [
//             {
//                 meta: {
//                     aggregateHash: '3D28C804EDD07D5A728E5C5FFEC01AB07AFA5766AE6997B38526D36015A4D006',
//                     aggregateId: '5A0069D83F17CF0001777E55',
//                     height: [
//                         18160,
//                         0,
//                     ],
//                     id: '5A0069D83F17CF0001777E56',
//                     index: 0,
//                 },
//                 transaction: {
//                     minApprovalDelta: 1,
//                     minRemovalDelta: 1,
//                     modifications: [
//                         {
//                             cosignatoryPublicKey: '589B73FBC22063E9AE6FBAC67CB9C6EA865EF556E5' +
//                             'FB8B7310D45F77C1250B97',
//                             type: 0,
//                         },
//                     ],
//                     signer: 'B4F12E7C9F6946091E2CB8B6D3A12B50D17CCBBF646386EA27CE2946A7423DCF',
//                     type: 16725,
//                     version: 36865,
//                 },
//             },
//         ],
//         type: 16705,
//         version: 36865,
//     },
// };

// const txnPayload = "0a0909092241627374726163745472616e73616374696f6e223a200a090909224e6574776f726b54797065223a203137362c0a090909225472616e73616374696f6e496e666f223a200a09090922486569676874223a20302c0a09090922496e646578223a20302c0a090909224964223a202c0a090909225472616e73616374696f6e48617368223a203c6e696c3e2c0a090909224d65726b6c65436f6d706f6e656e74486173683a22203c6e696c3e2c0a0909092241676772656761746548617368223a203c6e696c3e2c0a09090922556e6971756541676772656761746548617368223a203c6e696c3e2c0a090909224167677265676174654964223a200a09092c0a0909092254797065223a203078343134382c0a0909092256657273696f6e223a20312c0a090909224d6178466565223a20302c0a09090922446561646c696e65223a20323032332d30352d30352031333a35363a34372e323032393233383731202b30383030202b3038206d3d2b353537322e3731323033323439342c0a090909225369676e6174757265223a202c0a090909225369676e6572223a203c6e696c3e0a09092c0a090909224d6f73616963223a204d6f736169634964205b417373657449643d424646423432413139313136424446362c20416d6f756e743d305d2c0a090909224475726174696f6e223a203330302c0a090909225369676e65645472616e73616374696f6e223a200a09090922456e7469747954797065223a2031363936312c0a090909225061796c6f6164223ac0a0909092248617368223a20633733643135646636343334303339393833373065646363663630373830656361356264623038656239353962653834633166316237386338613938333935632c0a09090a0909";

// const txn = TransactionMapping.createFromPayload(txnPayload);

// console.log(txn);

// const aggregateTransaction = TransactionMapping.createFromDTO(
//     aggregateTransactionDTO) as AggregateTransaction;

// console.log(aggregateTransaction.signer?.address);

// const publicAccount = PublicAccount.createFromPublicKey("A5F82EC8EBB341427B6785C8111906CD0DF18838FB11B51CE0E18B5E79DFF630", NetworkType.MIJIN_TEST);

// // console.log(aggregateTransaction.cosignatures);
// console.log(aggregateTransaction.signedByAccount(publicAccount));